import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report

# Step 1: Reshape Data to Have One Target Column
# Convert the years 2016-2023 into rows instead of separate columns
gentrification_years = list(range(2016, 2024))  # Years from 2016-2023
df_melted = final_df.melt(id_vars=["ZCTA", "year"] + selected_features, 
                           value_vars=[f"gentrified_{year}" for year in gentrification_years], 
                           var_name="gentrification_year", value_name="gentrified")

# Convert "gentrification_year" to an integer (it was a column name before)
df_melted["gentrification_year"] = df_melted["gentrification_year"].str.extract("(\d+)").astype(int)

# Step 2: Split into Training (2016-2020) and Testing (2021-2023)
train_df = df_melted[df_melted["gentrification_year"].between(2016, 2020)]
test_df = df_melted[df_melted["gentrification_year"].between(2021, 2023)]

# Define Features (X) and Target (y)
X_train = train_df[selected_features]
y_train = train_df["gentrified"]
X_test = test_df[selected_features]
y_test = test_df["gentrified"]

# Step 3: Train Random Forest Model
rf_model = RandomForestClassifier(n_estimators=100, random_state=42)
rf_model.fit(X_train, y_train)

# Step 4: Make Predictions
y_pred = rf_model.predict(X_test)

# Step 5: Evaluate Model Performance
print("Model Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))
